---
import "../styles/globals.css";
import "../styles/customGlobals.css";
// custom fonts https://docs.astro.build/en/guides/fonts/
import "@fontsource-variable/montserrat";

// https://docs.astro.build/en/guides/view-transitions/#trigger-navigation
import { ClientRouter } from "astro:transitions";

import Metadata from "#utils/Metadata.astro";
// import PageLoader from "#utils/PageLoader.astro";

import type { MetadataProps } from "#types/index.ts";
interface Props extends MetadataProps {
	pageLoader?: boolean;
}
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<!-- https://react-scan.com/ -->
		<!-- <script src="https://unpkg.com/react-scan/dist/auto.global.js"></script> -->
		<ClientRouter />
		<!-- Theme script, in head to avoid light/dark mode flickering on page change -->
		<script is:inline>
			const theme = (() => {
				if (
					typeof localStorage !== "undefined" &&
					localStorage.getItem("theme")
				) {
					return localStorage.getItem("theme");
				}
				return window.matchMedia("(prefers-color-scheme: dark)").matches
					? "dark"
					: "light";
			})();

			document.documentElement.classList[theme === "dark" ? "add" : "remove"](
				"dark",
			);

			if (typeof localStorage !== "undefined") {
				const observer = new MutationObserver(() => {
					const isDark = document.documentElement.classList.contains("dark");
					localStorage.setItem("theme", isDark ? "dark" : "light");
				});
				observer.observe(document.documentElement, {
					attributes: true,
					attributeFilter: ["class"],
				});
			}

			document.addEventListener("astro:after-swap", () => {
				const theme = localStorage.getItem("theme") ?? "light";
				document.documentElement.classList[theme === "dark" ? "add" : "remove"](
					"dark",
				);
			});
		</script>
		<script src="#lib/getSavedTheme">
			getSavedTheme();
		</script>
		<Metadata {...Astro.props} />
	</head>
	<body>
		<slot />
	</body>
</html>

<style>
	html,
	body {
		font-family: "Montserrat Variable", sans-serif;
	}
	@keyframes bump {
		0% {
			opacity: 0;
			transform: scale(1) translateX(200px);
		}
		50% {
			opacity: 0.5;
			transform: scale(1.1);
		}
		100% {
			opacity: 1;
			transform: scale(1) translateX(0);
		}
	}
</style>
